###############################################################################
#
# IAR C/C++ Compiler V6.30.2.940/W32 for MSP430           09/Nov/2015  16:50:17
# Copyright 1996-2015 IAR Systems AB.
# Standalone license - IAR Embedded Workbench for Texas Instruments MSP430, 8K KickStart Edition 6.30
#
#    __rt_version  =  3
#    __double_size =  32
#    __reg_r4      =  free
#    __reg_r5      =  free
#    __pic         =  no
#    __core        =  430X
#    __data_model  =  small
#    __code_model  =  large
#    Source file   =  H:\3rd Year\EE312\nfb13184\Lab2\LEDDriver.c
#    Command line  =  
#        "H:\3rd Year\EE312\nfb13184\Lab2\LEDDriver.c" -lcN "H:\3rd
#        Year\EE312\nfb13184\Lab2\Debug\List\" -o "H:\3rd
#        Year\EE312\nfb13184\Lab2\Debug\Obj\" --no_cse --no_unroll --no_inline
#        --no_code_motion --no_tbaa --debug -D__MSP430FR4133__ -e --double=32
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.2\430\lib\dlib\dl430xlsfn.h" -I "H:\3rd
#        Year\EE312\nfb13184\Lab2\..\" -I "H:\3rd
#        Year\EE312\nfb13184\Lab2\..\driverlib\MSP430FR2xx_4xx\" --core=430X
#        --data_model=small -On --hw_workaround=CPU40 --segment __data16=DATA16
#        --segment __data20=DATA20 --code_model=large
#    List file     =  H:\3rd Year\EE312\nfb13184\Lab2\Debug\List\LEDDriver.lst
#    Object file   =  H:\3rd Year\EE312\nfb13184\Lab2\Debug\Obj\LEDDriver.r43
#
###############################################################################

H:\3rd Year\EE312\nfb13184\Lab2\LEDDriver.c
      1          /**************************************************
      2           * LEDDriver.c
      3           * Drives LED display
      4           *
      5           * Copyright 2015 University of Strathclyde
      6           *
      7           *
      8           **************************************************/
      9          
     10          #include "LedDriver.h"
     11          
     12          //Current dial value
     13          unsigned char ledValue_ = 0;
     14          
     15          /**
     16          Initialise LED Dial, setting GPIO parameters
     17          */
     18          void initialiseLedDial()
     19          {
     20            //GPIO 2.7
     21            GPIO_setAsOutputPin(GPIO_PORT_P2, GPIO_PIN7);
     22              
     23            //GPIO 5.1, 5.2, 5.3
     24            //Inserted by student
     25            GPIO_setAsOutputPin(GPIO_PORT_P5, GPIO_PIN1  | GPIO_PIN2 | GPIO_PIN3);
     26          
     27              
     28            //GPIO 8.0
     29            //Inserted by student
     30            GPIO_setAsOutputPin(GPIO_PORT_P8, GPIO_PIN0);
     31          }
     32          
     33          /** 
     34          Refresh the display
     35          */
     36          void refreshLedDial()
     37          {
     38            //Refresh lower bank (LEDs 1-4)
     39           //Inserted by student
     40            GPIO_setOutputLowOnPin(GPIO_PORT_P2, GPIO_PIN7);
     41            GPIO_setOutputHighOnPin(GPIO_PORT_P5, GPIO_PIN1);
     42            GPIO_setOutputHighOnPin(GPIO_PORT_P5, GPIO_PIN2);
     43            GPIO_setOutputHighOnPin(GPIO_PORT_P5, GPIO_PIN3);
     44            GPIO_setOutputHighOnPin(GPIO_PORT_P8, GPIO_PIN0);
     45            __delay_cycles(10000);  //Delay 10ms
     46            //Refresh lower bank (LEDs 5-9)
     47            //Inserted by student
     48            GPIO_setOutputHighOnPin(GPIO_PORT_P2, GPIO_PIN7);
     49            GPIO_setOutputLowOnPin(GPIO_PORT_P5, GPIO_PIN1);
     50            GPIO_setOutputLowOnPin(GPIO_PORT_P5, GPIO_PIN2);
     51            GPIO_setOutputLowOnPin(GPIO_PORT_P5, GPIO_PIN3);
     52            GPIO_setOutputLowOnPin(GPIO_PORT_P8, GPIO_PIN0);
     53            __delay_cycles(10000);  //Delay 10ms
     54          }
     55          
     56          /** 
     57          Set dial value
     58          */
     59          void setLedDial(unsigned char value)
     60          {
     61            ledValue_ = value;
     62          }

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      4   initialiseLedDial
        0   -> GPIO_setAsOutputPin
        4   -> GPIO_setAsOutputPin
      4   refreshLedDial
        4   -> GPIO_setOutputHighOnPin
        4   -> GPIO_setOutputLowOnPin
      4   setLedDial


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      30  initialiseLedDial
       1  ledValue_
     118  refreshLedDial
       6  setLedDial

 
 154 bytes in segment CODE
   1 byte  in segment DATA16_Z
 
 154 bytes of CODE memory
   1 byte  of DATA memory

Errors: none
Warnings: 1
